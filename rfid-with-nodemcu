



#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266HTTPClient.h>

#define RST_PIN 5   // D1 on NodeMCU
#define SS_PIN  2   // D4 on NodeMCU

// WiFi credentials
const char* ssid = "********";         // Replace with your WiFi SSID
const char* password = "*********"; // Replace with your WiFi password
const char* serverUrl = "http://EnterYourServerUrlndance/check"; // Replace with your server IP


MFRC522 rfid(SS_PIN, RST_PIN); // Instance of the class

void setup() {
  Serial.begin(115200); // Initialize serial communications
  SPI.begin();          // Init SPI bus
  rfid.PCD_Init();      // Init MFRC522 RFID

  // Connect to WiFi
  connectToWiFi();
  
  Serial.println("Place your RFID card/tag near the RFID reader...");
}

void loop() {
  // Look for new cards
  if (!rfid.PICC_IsNewCardPresent()) {
    return;
  }

  // Select one of the cards
  if (!rfid.PICC_ReadCardSerial()) {
    return;
  }

  // Create RFID UID string
  String rfidStr = "";
  Serial.print("RFID UID: ");
  for (byte i = 0; i < rfid.uid.size; i++) {
    rfidStr += String(rfid.uid.uidByte[i], HEX);
    Serial.print(rfid.uid.uidByte[i] < 0x10 ? " 0" : " ");
    Serial.print(rfid.uid.uidByte[i], HEX);
  }
  Serial.println();

  // Send the RFID to the server
  sendRFIDToServer(rfidStr);
  
  // Halt PICC
  rfid.PICC_HaltA();
  
  delay(2000); // Wait a bit before scanning again
}

// Function to connect to WiFi
void connectToWiFi() {
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);

  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
    attempts++;
    
    if (attempts > 10) { // Prevent infinite loop by limiting retries
      Serial.println("Failed to connect to WiFi. Restarting...");
      ESP.restart();
    }
  }

  Serial.println();
  Serial.println("Connected to WiFi!");
}

// Function to send RFID to the server via HTTP POST
void sendRFIDToServer(String rfidStr) {
  if (WiFi.status() == WL_CONNECTED) { // Check if connected to WiFi
    WiFiClient wifiClient; // Create a WiFi client
    HTTPClient http;       // Create an HTTP client

    http.begin(wifiClient, serverUrl); // Pass WiFiClient to begin method
    http.addHeader("Content-Type", "application/json"); // Set content type to JSON

    // Create the JSON body
    String jsonBody = "{\"rfid\":\"" + rfidStr + "\"}";
    Serial.println("Sending data to server: " + jsonBody);

    // Send POST request
    int httpResponseCode = http.POST(jsonBody);

    // Check the response
    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println("Response from server: " + response);
    } else {
      Serial.println("Error on HTTP request. Code: " + String(httpResponseCode));
    }

    http.end(); // Close the connection
  } else {
    Serial.println("WiFi not connected. Trying to reconnect...");
    connectToWiFi(); // Attempt to reconnect if WiFi is down
  }
}

